---
- hosts: localhost
  gather_facts: no
  module_defaults:
     group/aws:
       region: "us-east-1"
  tasks:
     - name: create target group
       elb_target_group:
          name: M5igtg
          protocol: tcp
          port: 80
          stickiness_enabled: no
          stickiness_type: source_ip
          vpc_id: "{{ vpc.vpc.id }}"
          unhealthy_threshold_count: 3
          healthy_threshold_count: 3
          health_check_interval: 30
          state: present
       register: M5_ig_tg
     - name: launch template
       ec2_launch_template:
          name: M5-ig-lt
          image_id: "ami-09d95fab7fff3776c"
          key_name: auburndemo1
          instance_type: t3.micro
          tags:
             Name: M5-ig-asg-server
          network_interfaces:
             - device_index: 0
               associate_public_ip_address: yes
               groups: 
                  - "{{ M5_endpoint_tag.group_id }}"
                  - "{{ nginx_servers.group_id }}"
                  - "{{ M5_ig_postgres_tag.group_id }}"
          iam_instance_profile: 'image-gallery-server-role'
          user_data: "{{ lookup( 'file', 'ec2-prod-bootstrap.sh') | b64encode }}"
          state: present
       register: ig_lt
     - name: allocate a new elastic IP if needed
       ec2_eip:
          reuse_existing_ip_allowed: yes
          tag_name: eip1
          state: present
       register: eip1
     - name: allocate a new elastic IP if needed
       ec2_eip:
          reuse_existing_ip_allowed: yes
          state: present
          tag_name: eip2
       register: eip2
     - name: debug
       debug: 
          var: eip2
     - name: create network load balancer
       elb_network_lb:
          name: M5-ig-nlb
          subnet_mappings:
             - SubnetId: "{{ M5_ig_private_1.subnet.id }}"
               AllocationId: "{{ eip1.allocation_id }}"
             - SubnetId: "{{ M5_ig_private_2.subnet.id }}"
               AllocationId: "{{ eip2.allocation_id }}"
          listeners:
             - Protocol: TCP
               Port: 80
               DefaultActions:
                  - Type: forward
                    TargetGroupName: "{{ M5_ig_tg.target_group_name }}"
             - Protocol: TLS
               Port: 443
               Certificates:
                  - CertificateArn: "arn:aws:acm:us-east-1:365753052389:certificate/c5dcc56b-263d-4e71-a3b4-17356ade1b52"
               DefaultActions:
                  - Type: forward
                    TargetGroupName: "{{ M5_ig_tg.target_group_name }}"
          state: present
       register: m5_ig_lb
     - name: create autoscaling group
       ec2_asg:
          name: M5-ig-asg
          launch_template:
              version: $Latest
              launch_template_name: M5-ig-lt
          min_size: 2
          max_size: 4
          desired_capacity: 2
          vpc_zone_identifier: "{{ M5_ig_public_1.subnet.id }},{{ M5_ig_public_2.subnet.id }}"
          health_check_type: EC2
          availability_zones: ['us-east-1a', 'us-east-1b']
          state: present     
